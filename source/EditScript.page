Title="Edit Script"
---
<?php
/* Copyright 2015, Guilherme Jardim
 * Copyright 2016-2020, Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */

$plugin = "unassigned.devices";
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$translations = file_exists("$docroot/webGui/include/Translations.php");
require_once "$docroot/plugins/$plugin/include/Legacy.php";
?>
<?if (! $translations):?>
<?eval('?>'.parse_file("$docroot/plugins/$plugin/EditScript.page"))?>
<?else:?>
<?
require_once("plugins/{$plugin}/include/lib.php");

function safe_filename($string) {
	$string = preg_replace('~[^0-9a-z -_]~i', '', $string);
	return preg_replace('~[ ]~i', '_', $string);
}

$background = "checked";

if (isset($_GET['s'])) {
	$serial = $_GET['s'];
	$partition = $_GET['p'];
	$file = get_config($serial,"command.{$partition}");
	if (! file_exists($file)) {
		set_config($serial,"command.{$partition}","");
	}
	if (! $file ) {
		$file = "/boot/config/plugins/{$plugin}/".( preg_replace("%\s+%", "_", urldecode($_GET['l'])) ).".sh";
	} else {
		$background = (get_config($serial,"command_bg.{$partition}") == "true" ) ? "checked" : "";
	}
} else if (isset($_GET['d'])) {
	$device = $_GET['d'];
	$file = get_samba_config($device,"command");
	if (! file_exists($file)) {
		set_samba_config($device,"command","");
	}
	if (! $file ) {
		$file = "/boot/config/plugins/{$plugin}/".( preg_replace("%\s+%", "_", urldecode($_GET['l'])) ).".sh";
	} else {
		$background = (get_samba_config($device,"command_bg") == "true" ) ? "checked" : "";
	}
} else if (isset($_GET['i'])) {
	$device = $_GET['i'];
	$file = get_iso_config($device,"command");
	if (! file_exists($file)) {
		set_iso_config($device,"command","");
	}
	if (! $file ) {
		$file = "/boot/config/plugins/{$plugin}/".( preg_replace("%\s+%", "_", urldecode($_GET['l'])) ).".sh";
	} else {
		$background = (get_iso_config($device,"command_bg") == "true" ) ? "checked" : "";
	}
}

$text = @file_get_contents($file);
$default_text = <<<EOT
#!/bin/bash
PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin
## Available variables: 
# AVAIL      : available space
# USED       : used space
# SIZE       : partition size
# SERIAL     : disk serial number
# ACTION     : if mounting, ADD; if unmounting, UNMOUNT; if unmounted, REMOVE; if error, ERROR_MOUNT, ERROR_UNMOUNT
# MOUNTPOINT : where the partition is mounted
# FSTYPE     : partition filesystem
# LABEL      : partition label
# DEVICE     : partition device, e.g /dev/sda1
# OWNER      : "udev" if executed by UDEV, otherwise "user"
# PROG_NAME  : program name of this script
# LOGFILE    : log file for this script

case \$ACTION in
  'ADD' )
    # do your stuff here
	/usr/local/emhttp/webGui/scripts/notify -e "Unraid Server Notice" -s "Unassigned Devices" -d "Device mounted" -i "normal"

	# This will refresh the UD webpage when the script is finished.
	/usr/local/sbin/rc.unassigned refresh \$DEVICE
  ;;

  'UNMOUNT' )
    # do your stuff here
	/usr/local/emhttp/webGui/scripts/notify -e "Unraid Server Notice" -s "Unassigned Devices" -d "Device unmounting" -i "normal"
  ;;

  'REMOVE' )
    # do your stuff here
	/usr/local/emhttp/webGui/scripts/notify -e "Unraid Server Notice" -s "Unassigned Devices" -d "Device unmounted" -i "normal"
  ;;

  'ERROR_MOUNT' )
    # do your stuff here
	/usr/local/emhttp/webGui/scripts/notify -e "Unraid Server Notice" -s "Unassigned Devices" -d "Error mounting device" -i "alert"
  ;;

  'ERROR_UNMOUNT' )
    # do your stuff here
	/usr/local/emhttp/webGui/scripts/notify -e "Unraid Server Notice" -s "Unassigned Devices" -d "Error unmounting device" -i "alert"
  ;;
esac
EOT;

$prompt=_("Remove Script File");
$remove = is_file($file) ? "<a title='$prompt' class='exec' onclick='rmfile(\"{$file}\");'><i class='fa fa-times-circle' style='color:red;font-size: 25px;'></i></a> " : "";
?>

<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.switchbutton.js')?>"></script>
<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.filetree.js')?>"></script>
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.ui.css')?>">
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.switchbutton.css')?>">
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.filetree.css')?>" >

<style type="text/css">
	.fileTree {
		border: solid 1px #BBB;
		background: #FFF;
		overflow: scroll;
		padding: 5px;
		position:absolute;
		z-index:100;
		display:none;
		color:initial;
	}
</style>

<form markdown="1" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#include" value="/webGui/include/update.file.php">


<input type="text" title='_(Enter Script File Name)_.' name="#file" style="width:40%;" onclick="openFileBrowser(this,'/boot/config/plugins/<?=$plugin;?>/','sh',false,true);" autocomplete="off" value="<?=$file;?>"><?=$remove;?>

:ud_edit_script_choose_name_plug:
> Choose your script name from the file selection dropdown, or enter your desired script name.
:end

<span title='_(Turn on to run Script File in the background)_.'><input type="checkbox" name="run_background" <?=$background;?>></span>

:ud_edit_script_run_background_plug:
> Turn on the 'Run in Background' to have the script run as a background task.  This can keep the Unassigned Devices UI from hanging when the script is run from the UI.
:end

<br />
<strong>_(Script content)_:</strong>
<br />

<textarea spellcheck="false" cols="80" rows="22" name="text" title='_(Enter and Edit the Script that runs when a udev or operator event occurs)_.' style="font-family:bitstream;width:80%"><?=$text;?></textarea>

:ud_edit_script_buttons_plug:
> Click the **Save** button to commit the current edits.  Click **Reset** to undo any changes you make (before Saving). Click **Done** to exit this page.
>
> Click the **Default Script** button to initialize the edit box with a default script.
> You still need to click **Save** in order to commit the change.
:end

<button type="button" title='_(Load the default script)_.' onclick="setDefault(this.form)">_(Default Script)_</button>
<input type="reset" title='_(Undo your changes since last Save)_.' value='_(Reset)_'/>
<input type="submit" title='_(Save your changes and save to Script File)_.' value='_(Save)_'/>
<button type="button" onclick="done()">_(Done)_</button>

</form>

<script>
	$("input[name=run_background]").each(function(){var checked = $(this).is(":checked");$(this).switchButton({labels_placement: "right", checked:checked,on_label:"_(Run in background)_",off_label:"_(Run in background)_"});});
	<?if (isset($_GET['s'])):?>
		$( "form" ).submit(function( event ) {
			$.post("/plugins/<?=$plugin;?>/UnassignedDevices.php",{action:"set_command",serial:"<?=$serial;?>",command:$("input[name='#file']").val(),part:"<?=$partition;?>",background:$("input[name='run_background']").is(":checked")},function(data){event.preventDefault();},"json");
		});
	<?endif;?>
	<?if (isset($_GET['d'])):?>
		$( "form" ).submit(function( event ) {
			$.post("/plugins/<?=$plugin;?>/UnassignedDevices.php",{action:"set_samba_command",device:"<?=$device;?>",command:$("input[name='#file']").val(), background:$("input[name='run_background']").is(":checked")},function(data){event.preventDefault()},"json");
		});
	<?endif;?>
	<?if (isset($_GET['i'])):?>
		$( "form" ).submit(function( event ) {
			$.post("/plugins/<?=$plugin;?>/UnassignedDevices.php",{action:"set_iso_command",device:"<?=$device;?>",command:$("input[name='#file']").val(), background:$("input[name='run_background']").is(":checked")},function(data){event.preventDefault()},"json");
		});
	<?endif;?>

	function setDefault(form) {
		form.elements['text'].value = <?=json_encode($default_text);?>;
	}

	function load(el) {
		$.get($( el ).val(),function(data){ $( 'textarea' ).val(data);});
	}

	function openFileBrowser(el, root, filter, on_folders, on_files) {
		if (on_folders === undefined) on_folders = true;
		if (on_files   === undefined) on_files = true;
		if (! filter && ! on_files)   filter = 'HIDE_FILES_FILTER';
		p = $(el);
		// Skip is fileTree is already open
		if ( p.next().hasClass('fileTree') ){return null;}
		// create a random id
		var r = Math.floor((Math.random()*1000)+1);
		// Add a new span and load fileTree
		p.after("<span id='fileTree"+r+"' class='textarea fileTree'></span>");
		var ft = $('#fileTree'+r);
		ft.fileTree({
			root: root,
			filter: filter,
			allowBrowsing : true
			},
			function(file){if(on_files){p.val(file);$(ft).slideUp('fast',function (){$(ft).remove();});load(p);}},
			function(folder){if(on_folders){p.val(folder);$(ft).slideUp('fast',function (){$(ft).remove();});}}
		);
		// Format fileTree according to parent position, height and width
		ft.css({'left':p.position().left,'top':( p.position().top + p.outerHeight() ),'width':(p.width()+2) });
		// close if click elsewhere
		$(document).mouseup(function(e){if (! ft.is(e.target) && ft.has(e.target).length === 0){$(ft).slideUp('fast',function (){$(ft).remove();});}});
		// Open fileTree
		ft.slideDown('fast');
	}

	function rmfile(file) {
		$.post("/update.php",{"#command":"/plugins/unassigned.devices/scripts/rm","#arg[1]":file}).done(function(){location.reload();});
	}
</script>
<?endif;?>
